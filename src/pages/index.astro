---
import { getCollection } from 'astro:content';

// Layout import â€” provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from '../layouts/BaseLayout.astro';

// Component Imports
import CallToAction from '../components/CallToAction.astro';
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import Icon from '../components/Icon.astro';
import Pill from '../components/Pill.astro';

// Page section components
import ContactCTA from '../components/ContactCTA.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';
import BlogPreview from '../components/BlogPreview.astro';
import Skills from '../components/Skills.astro';

// Content Fetching: List four most recent work projects
const projects = (await getCollection('work'))
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
	.slice(0, 4);

	// Content Fetching: List four most recent articles
const blogCollection = (await getCollection('blog'))
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
	.slice(0, 4);

// Full Astro Component Syntax:
// https://docs.astro.build/basics/astro-components/
---

<BaseLayout>
	<div class="stack gap-30 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<header class="hero">
				<Hero
					title="Hello, I'm Ryan Macalandag"
					tagline="I am a frontend developer, creative designer and multimedia producer based in Canberra."
					align="start"
				>
					<div class="roles">
						<Pill><Icon icon="code" size="1.33em" /> Developer</Pill>
						<Pill><Icon icon="brush" size="1.33em" /> Designer</Pill>
						<Pill><Icon icon="strategy" size="1.33em" /> Multimedia</Pill>
					</div>
				</Hero>

				<div class="portrait">
					<img
						alt="Ryan Macalandag takes a selfie in Autumn"
						width="480"
						height="620"
						src="/assets/portrait.jpg"
					/>

					<!-- overlay elements -->
					<div class="portrait-overlay">
						<div class="overlay-01">
							G'day!
						</div>
						<div class="overlay-02">
							Kumusta po?
						</div>
						<div class="overlay-03">
							Hope you're doing well. ðŸ˜ƒ
						</div>
						<div class="overlay-04">
							<div class="animate-rotate">
								<Icon icon="circle-dashed" color="var(--accent-regular)" size="5em" />
							</div>
						</div>
					</div>

				</div>

			</header>

			<Skills />
		</div>

		<main class="wrapper stack gap-20 lg:gap-48">
			
			<!-- Selected Work -->
			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Selected Work</h3>
					<p>Take a look below at some of my featured work for clients from the past few years.</p>
				</header>

				<div class="gallery">
					<Grid variant='small'>
						{
							projects.map((project) => (
								<li>
									<PortfolioPreview project={project} />
								</li>
							))
						}
					</Grid>
				</div>

				<div class="cta">
					<CallToAction href="/work/">
						View All
						<Icon icon="arrow-right" size="1em" />
					</CallToAction>
				</div>
			</section>
			
			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Recent Articles</h3>
					<!-- <p>Take a look below at some of my featured work for clients from the past few years.</p> -->
				</header>

				<div class="gallery">
					<Grid>
						{
							blogCollection.map((blog) => (
								<li>
									<BlogPreview blog={blog} />
								</li>
							))
						}
					</Grid>
				</div>

				<div class="cta">
					<CallToAction href="/blog/">
						View All
						<Icon icon="arrow-right" size="1em" />
					</CallToAction>
				</div>
			</section>
		</main>

		<ContactCTA />
	</div>
</BaseLayout>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: none;
	}

	.hero img {
		aspect-ratio: 5 / 4;
		object-fit: cover;
		object-position: center;
		box-shadow: var(--shadow-lg);
	}

	.portrait .portrait-overlay {
		display: none;
	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}
		
		.portrait {
			position: relative;
			transform: rotate(0deg);
			transition: 300ms;
		}
		
		.portrait:hover {
			transform: rotate(3deg);
		}
		
		.portrait .portrait-overlay {
			display: flex;
			/* opacity: 0; */
			transition: 300ms;
		}
		
		.portrait:hover .portrait-overlay {
			/* opacity: 1; */
		}
		
		.portrait img {
			aspect-ratio: 3 / 4;
			object-fit: cover;
			filter: saturate(1);
			transition: 300ms ease-in-out;
		}

		.portrait:hover img {
			filter: saturate(.65);
		}

		.portrait .overlay-01 {
			position: absolute;
			top: 25%;
			right: 10%;
			padding: .65rem 1rem;
			background-color: var(--gray-999);
			border-radius: .35rem;
			opacity: 0;
			transform: rotate(30deg); transform-origin: 0% 50%;
			transition: 300ms ease-in-out;
			transition-delay: 0ms;
			box-shadow: var(--shadow-sm);
		}

		.portrait:hover .overlay-01 {
			transform: rotate(-3deg);
			opacity: 1;
		}

		.portrait .overlay-02 {
			position: absolute;
			font-style: italic;
			top: 75%;
			left: -5%;
			padding: .65rem 1rem;
			color: var(--gray-999);
			background-color: var(--accent-regular);
			border-radius: .35rem;
			opacity: 0;
			transform: rotate(30deg); transform-origin: 0% 50%;
			transition: 300ms ease-in-out;
			transition-delay: 100ms;
			box-shadow: var(--shadow-sm);
		}

		.portrait:hover .overlay-02 {
			transform: rotate(-3deg);
			opacity: 1;
		}

		.portrait .overlay-03 {
			position: absolute;
			top: 83%;
			left: 5%;
			padding: .65rem 1rem;
			/* color: var(--gray-999); */
			background-color: var(--gray-999);
			border-radius: .35rem;
			opacity: 0;
			transform: rotate(30deg); transform-origin: 0% 50%;
			transition: 300ms ease-in-out;
			transition-delay: 200ms;
			box-shadow: var(--shadow-sm);
		}

		.portrait:hover .overlay-03 {
			transform: rotate(-3deg);
			opacity: 1;
		}

		.portrait .overlay-04 {
			position: absolute;
			top: -5%;
			left: 10%;
			opacity: 0;
			transform: rotate(30deg); transform-origin: 0% 50%;
			transition: 300ms ease-in-out;
			transition-delay: 0ms;
		}

		.portrait:hover .overlay-04 {
			transform: rotate(-3deg);
			opacity: 1;
		}

	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}

	/* ====================================================== */

	.mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}
</style>
